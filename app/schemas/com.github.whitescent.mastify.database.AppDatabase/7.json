{
  "formatVersion": 1,
  "database": {
    "version": 7,
    "identityHash": "82cc1b42e38ed09da24b0fd8e5cad1e2",
    "entities": [
      {
        "tableName": "TimelineEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `timelineUserId` INTEGER NOT NULL, `createdAt` TEXT NOT NULL, `sensitive` INTEGER NOT NULL, `spoilerText` TEXT NOT NULL, `visibility` TEXT NOT NULL, `uri` TEXT NOT NULL, `url` TEXT, `repliesCount` INTEGER NOT NULL, `reblogsCount` INTEGER NOT NULL, `inReplyToId` TEXT, `inReplyToAccountId` TEXT, `favouritesCount` INTEGER NOT NULL, `editedAt` TEXT, `favorited` INTEGER NOT NULL, `reblogged` INTEGER NOT NULL, `bookmarked` INTEGER NOT NULL, `reblog` TEXT, `content` TEXT NOT NULL, `account` TEXT NOT NULL, `poll` TEXT, `card` TEXT, `emojis` TEXT NOT NULL, `tags` TEXT NOT NULL, `mentions` TEXT NOT NULL, `application` TEXT, `attachments` TEXT NOT NULL, `hasUnloadedStatus` INTEGER NOT NULL DEFAULT false, PRIMARY KEY(`id`), FOREIGN KEY(`timelineUserId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timelineUserId",
            "columnName": "timelineUserId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sensitive",
            "columnName": "sensitive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "spoilerText",
            "columnName": "spoilerText",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "visibility",
            "columnName": "visibility",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uri",
            "columnName": "uri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "repliesCount",
            "columnName": "repliesCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reblogsCount",
            "columnName": "reblogsCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "inReplyToId",
            "columnName": "inReplyToId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "inReplyToAccountId",
            "columnName": "inReplyToAccountId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "favouritesCount",
            "columnName": "favouritesCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "editedAt",
            "columnName": "editedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "favorited",
            "columnName": "favorited",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reblogged",
            "columnName": "reblogged",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bookmarked",
            "columnName": "bookmarked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reblog",
            "columnName": "reblog",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "account",
            "columnName": "account",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "poll",
            "columnName": "poll",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "card",
            "columnName": "card",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "emojis",
            "columnName": "emojis",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mentions",
            "columnName": "mentions",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "application",
            "columnName": "application",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attachments",
            "columnName": "attachments",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hasUnloadedStatus",
            "columnName": "hasUnloadedStatus",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "false"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_TimelineEntity_timelineUserId",
            "unique": false,
            "columnNames": [
              "timelineUserId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TimelineEntity_timelineUserId` ON `${TABLE_NAME}` (`timelineUserId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "timelineUserId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AccountEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `domain` TEXT NOT NULL, `accessToken` TEXT NOT NULL, `clientId` TEXT, `clientSecret` TEXT, `isActive` INTEGER NOT NULL, `accountId` TEXT NOT NULL, `username` TEXT NOT NULL, `displayName` TEXT NOT NULL, `note` TEXT NOT NULL, `profilePictureUrl` TEXT NOT NULL, `header` TEXT NOT NULL, `createdAt` TEXT NOT NULL, `emojis` TEXT NOT NULL, `fields` TEXT NOT NULL, `followersCount` INTEGER NOT NULL, `followingCount` INTEGER NOT NULL, `statusesCount` INTEGER NOT NULL, `firstVisibleItemIndex` INTEGER NOT NULL DEFAULT 0, `offset` INTEGER NOT NULL DEFAULT 0, `lastNotificationId` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "domain",
            "columnName": "domain",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accessToken",
            "columnName": "accessToken",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "clientId",
            "columnName": "clientId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "clientSecret",
            "columnName": "clientSecret",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "note",
            "columnName": "note",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "profilePictureUrl",
            "columnName": "profilePictureUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "header",
            "columnName": "header",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "emojis",
            "columnName": "emojis",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fields",
            "columnName": "fields",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "followersCount",
            "columnName": "followersCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "followingCount",
            "columnName": "followingCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statusesCount",
            "columnName": "statusesCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "firstVisibleItemIndex",
            "columnName": "firstVisibleItemIndex",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "offset",
            "columnName": "offset",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "lastNotificationId",
            "columnName": "lastNotificationId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "InstanceEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`instance` TEXT NOT NULL, `emojiList` TEXT, `maximumTootCharacters` INTEGER, `maxPollOptions` INTEGER, `maxPollCharactersPerOption` INTEGER, `minPollExpiration` INTEGER, `maxPollExpiration` INTEGER, `videoSizeLimit` INTEGER, `imageSizeLimit` INTEGER, `imageMatrixLimit` INTEGER, `maxMediaAttachments` INTEGER, PRIMARY KEY(`instance`))",
        "fields": [
          {
            "fieldPath": "instance",
            "columnName": "instance",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "emojiList",
            "columnName": "emojiList",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "maximumTootCharacters",
            "columnName": "maximumTootCharacters",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxPollOptions",
            "columnName": "maxPollOptions",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxPollCharactersPerOption",
            "columnName": "maxPollCharactersPerOption",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "minPollExpiration",
            "columnName": "minPollExpiration",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxPollExpiration",
            "columnName": "maxPollExpiration",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "videoSizeLimit",
            "columnName": "videoSizeLimit",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "imageSizeLimit",
            "columnName": "imageSizeLimit",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "imageMatrixLimit",
            "columnName": "imageMatrixLimit",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxMediaAttachments",
            "columnName": "maxMediaAttachments",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "instance"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '82cc1b42e38ed09da24b0fd8e5cad1e2')"
    ]
  }
}